/// <reference types="node" />
import type { Global } from "@jest/types";
import { AllureRuntimeApiInterface, MetadataMessage, ParameterOptions, StepBodyFunction } from "allure-js-commons";
import AllureJest from "./AllureJest";
export declare class AllureJestApi implements AllureRuntimeApiInterface {
    env: AllureJest;
    context: Global.Global;
    constructor(env: AllureJest, context: Global.Global);
    sendMetadata(metadata: MetadataMessage): Promise<unknown>;
    label(name: string, value: string): void;
    parameter(name: string, value: any, options?: ParameterOptions): void;
    attachment(content: string | Buffer, type: string): void;
    link(url: string, name?: string, type?: string): void;
    step(name: string, body: StepBodyFunction): Promise<void>;
    displayName(name: string): Promise<void>;
    epic(epic: string): void;
    feature(feature: string): void;
    story(story: string): void;
    suite(name: string): void;
    parentSuite(name: string): void;
    subSuite(name: string): void;
    owner(owner: string): void;
    severity(severity: string): void;
    layer(layer: string): void;
    id(allureId: string): void;
    tag(tag: string): void;
    issue(name: string, url: string): void;
    tms(name: string, url: string): void;
    description(markdown: string): void;
    descriptionHtml(html: string): void;
    testCaseId(testCaseId: string): void;
    historyId(historyId: string): void;
}
